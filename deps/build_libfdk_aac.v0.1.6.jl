using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfdk-aac"], :libfdk),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/libfdk_aac_jll.jl/releases/download/libfdk_aac-v0.1.6+1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/libfdk_aac.v0.1.6.aarch64-linux-gnu.tar.gz", "eed669f0dc19dce54613176cb0faca3c4b0b56159f588bf07232adf6a8ee9312"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/libfdk_aac.v0.1.6.aarch64-linux-musl.tar.gz", "440cd67b3efad8fe90dac0d03d34b447fb9b1c0ea6edac09c7d40af84939dc44"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/libfdk_aac.v0.1.6.arm-linux-gnueabihf.tar.gz", "84b4fae499e28d7db48d2e598df8a879dabd9c5e4ab1ff65d2c91a5e18db3b85"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/libfdk_aac.v0.1.6.arm-linux-musleabihf.tar.gz", "9e30a5bf63ef09fcf94bc178dc59b569223045c901f22d4c16bc036a8619b862"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/libfdk_aac.v0.1.6.i686-linux-gnu.tar.gz", "8d0f2d37a10f154100a989596e9797b6e0639025ec196996bddbf4c15e98581b"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/libfdk_aac.v0.1.6.i686-linux-musl.tar.gz", "fbd6f156900ab1e0449e1895dc7642dcc8a454fd1009818718fe8bd36332d480"),
    Windows(:i686) => ("$bin_prefix/libfdk_aac.v0.1.6.i686-w64-mingw32.tar.gz", "30a65e9433ef66b6f62ce91d45a10d4b28c4b0ebfc35403f1d1545d2cc8df407"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/libfdk_aac.v0.1.6.powerpc64le-linux-gnu.tar.gz", "450daf077c2b1011bd41e030e91fc00217e8d9f9d6df9a6fc5fd994732e153a2"),
    MacOS(:x86_64) => ("$bin_prefix/libfdk_aac.v0.1.6.x86_64-apple-darwin14.tar.gz", "461dec1ce3df4a8e30903b497b60274dafa4cbb4d7c22701475bc4e6d73313ed"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/libfdk_aac.v0.1.6.x86_64-linux-gnu.tar.gz", "5bac9e708a2523f73029733ed586bfe4bf9d02a91ce7cf634569f7fd708a9d1c"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/libfdk_aac.v0.1.6.x86_64-linux-musl.tar.gz", "6770012909f815f216c244eea2382c3b42b077462a9927864304a6e69561b33c"),
    FreeBSD(:x86_64) => ("$bin_prefix/libfdk_aac.v0.1.6.x86_64-unknown-freebsd11.1.tar.gz", "73a28ddde7f16ddd71deaf6e007bf13402b9d565eec5342a4aa1f048e668a9e9"),
    Windows(:x86_64) => ("$bin_prefix/libfdk_aac.v0.1.6.x86_64-w64-mingw32.tar.gz", "b859fb8205c6adfbcc57383841f97803729d8a0ec530798e535e9f5531bb0649"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
