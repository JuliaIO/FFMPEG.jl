using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libvorbis"], :libvorbis),
    LibraryProduct(prefix, ["libvorbisenc"], :libvorbisenc),
    LibraryProduct(prefix, ["libvorbisfile"], :libvorbisfile),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/libvorbis_jll.jl/releases/download/libvorbis-v1.3.6+2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/libvorbis.v1.3.6.aarch64-linux-gnu.tar.gz", "09128c859437860094d6c9dbff326ca906831c9f152be0e9653f8aa3c03d330e"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/libvorbis.v1.3.6.aarch64-linux-musl.tar.gz", "247f2a70b3c2a612814c883e61bbef7b9c18442fd539c6bcd14bccd328cbc238"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/libvorbis.v1.3.6.arm-linux-gnueabihf.tar.gz", "b1f389d1cb1f2154e46616193be3ea5caba7d4b4c5f7897ef4e739c82e31a227"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/libvorbis.v1.3.6.arm-linux-musleabihf.tar.gz", "faf145c75e61aae8b705e4055224ba5d883af5b92bb6bd80f2bc00291fb5b602"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/libvorbis.v1.3.6.i686-linux-gnu.tar.gz", "a76e059764b711c87eaa12882fe52d25091a63dd1d9d7e63be2a794de7c78957"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/libvorbis.v1.3.6.i686-linux-musl.tar.gz", "66ef84234120b62228945c41f895f889c5c161d432e3b2757a80f3b0b5fdd476"),
    Windows(:i686) => ("$bin_prefix/libvorbis.v1.3.6.i686-w64-mingw32.tar.gz", "01e909dc5d516e58d8fa98630eb343f6f9421e1f9e23dbcf72a6ab45b5abb5f5"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/libvorbis.v1.3.6.powerpc64le-linux-gnu.tar.gz", "befae393ccb82be2973a5bb0659f256434412ab28e10e5b7c64939f34c0243b4"),
    MacOS(:x86_64) => ("$bin_prefix/libvorbis.v1.3.6.x86_64-apple-darwin14.tar.gz", "98aba8dd861f3d6012faaae3ee7ed5f13195f06291efc56855f3353d5d23ba4a"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/libvorbis.v1.3.6.x86_64-linux-gnu.tar.gz", "e24d8f43af8ab90cc1e441cd7e252b69d7521e2ade63dc76e4882c96f760f833"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/libvorbis.v1.3.6.x86_64-linux-musl.tar.gz", "bd2a2fb93a7e800006b08bb0ae10ea1d0d350c3f0503f988b6b17dad163f47e5"),
    FreeBSD(:x86_64) => ("$bin_prefix/libvorbis.v1.3.6.x86_64-unknown-freebsd11.1.tar.gz", "b07bdcec09810c3310cadd3657f08eac7f1c5337958febcec2ef19e274c9427b"),
    Windows(:x86_64) => ("$bin_prefix/libvorbis.v1.3.6.x86_64-w64-mingw32.tar.gz", "6341fb915043ebc2b52750b5d947ddb619044e4d1d1c079d25af1ff14e425dc7"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
